version: '3.1'
services:

  prometheus:
    image: bitnami/prometheus:2.46.0-debian-11-r31
    container_name: prometheus
    restart: always
    depends_on:
      - node-exporter
      - apache-exporter
      - mysql-exporter
      - cadvisor
      - mongodb-exporter
    command: 
      - "--web.config.file=/etc/prometheus/web-config.yml"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.external-url=https://localhost:9090/prometheus"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
      - "--storage.tsdb.retention.size=1GB"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - '9090:9090'
    networks:
      - red_docker
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ../certs:/etc/prometheus/certs
      - prometheus:/prometheus

  grafana:
    image: grafana/grafana:main-ubuntu
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    environment:
      - VIRTUAL_PROTO=https
      - VIRTUAL_PORT=3000
      - GF_SERVER_CERT_FILE=/etc/letsencrypt/certs/xestoso11.crt
      - GF_SERVER_CERT_KEY=/etc/letsencrypt/certs/xestoso11.key
      - GF_SERVER_PROTOCOL=https
      - GF_SERVER_HTTP_PORT=3000
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=https://localhost:3000/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - '3000:3000'
    networks:
      - red_docker
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
      - ../certs:/etc/letsencrypt/certs

  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node-exporter
    restart: always
    command: 
     - "--web.config.file=/etc/node-exporter/web-config.yml"
     - "--collector.filesystem.mount-points-exclude='^/(sys|proc|dev|host|etc)($$|/)'"
    ports:
      - '9100:9100'
    networks:
      - red_docker
    volumes:
#      - /:/rootfs
      - ./ssl/:/etc/node-exporter
      - ../certs:/etc/node-exporter/certs

  mongodb-exporter:
    image: bitnami/mongodb-exporter:0.39.0-debian-11-r85
    container_name: mongodb-exporter
    restart: always
    command: 
      - "--mongodb.uri=mongodb://root:password@bbdd_mongodb:27017/"
      - "--compatible-mode"
      - "--collect-all"
      - "--mongodb.direct-connect=false"
      #- "--log.level=debug"
    ports:
      - '9216:9216'
    networks:
      - red_docker

  mysql-exporter:
    image: prom/mysqld-exporter:v0.15.0
    container_name: mysql-exporter
    restart: always
    command:
     - "--web.config.file=/etc/mysql-exporter/web-config.yml"
     - "--collect.info_schema.tablestats"
     - "--mysqld.username=root:password"
     - "--mysqld.address=bbdd_mysql:3306"
    ports:
      - '9104:9104'
    networks:
      - red_docker
    volumes:
      - ./ssl/:/etc/mysql-exporter
      - ../certs:/etc/mysql-exporter/certs

  apache-exporter:
    image: bitnami/apache-exporter:1.0.1-debian-11-r32
    container_name: apache-exporter
    restart: always
    command:
       - "--web.config.file=/etc/apache-exporter/web-config.yml"
       - "--scrape_uri=https://apache2:80/server-status?auto"
       - "--insecure"
    ports:
      - '9117:9117'
    networks:
      - red_docker
    volumes:
      - ./ssl/:/etc/apache-exporter
      - ../certs:/etc/apache-exporter/certs

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
    - 8081:8080
    networks:
      - red_docker
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: blackbox
    restart: always
    command: 
      - "--config.file=/etc/blackbox/blackbox.yml"
    ports:
      - 9115:9115
    networks:
      - red_docker
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox/blackbox.yml

  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    restart: always
    depends_on:
      - prometheus
    command: 
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=http://alertmanager:9093/alertmanager"
      - "--web.config.file=/etc/alertmanager/ssl/web-config.yml"
    ports:
      - 9093:9093
    networks:
      - red_docker
    volumes:
      - ./alertmanager/:/etc/alertmanager/
      - ./ssl/:/etc/alertmanager/ssl
      - ../certs:/etc/alertmanager/ssl/certs

  prometheus-msteams:
    image: bzon/prometheus-msteams:v1.3.0
    container_name: prometheus-msteams
    restart: always
    depends_on:
      - alertmanager
    environment:
      - TEAMS_INCOMING_WEBHOOK_URL="${url_msteams}"
      - TEAMS_REQUEST_URI=alertmanager
    ports:
      - 2000:2000
    networks:
      - red_docker
    volumes:
      - ./prometheus-msteams/mesage-card.tmpl:/mesage-card.tmpl

networks:
  red_docker:
    name: red_docker
volumes:
  grafana_data:
  prometheus:
